service: todo
provider:
  name: google
  stage: dev
  runtime: nodejs8
  region: us-central1
  project: todo-235416
  # The GCF credentials can be a little tricky to set up. Luckily we've documented this for you here:
  # https://serverless.com/framework/docs/providers/google/guide/credentials/
  #
  # the path to the credentials file needs to be absolute
  credentials: ~/.gcloud/keyfile.json
# provider:
#   name: aws
#   runtime: nodejs8.10
#   memorySize: 256
#   timeout: 3
#   stackTags:
#     SERVICE: '${{self:service}}'
#     STAGE: '${{self:provider.stage}}'
#     REGION: '${{self:provider.region}}'
#     VERSION: '${{file(./package.json):version}}'
plugins:
  # - serverless-plugin-typescript
  - serverless-offline
  - serverless-google-cloudfunctions
custom:
  serverless-offline:
    host: 0.0.0.0
    port: 3000
package:
  include:
    - package.json
    - dist/**
    - public/**
    - node_modules/**
  exclude:
    - ./**
functions:
  ping:
    description: Ping the service
    handler: dist/src/server/index.ping
    events:
      - http:
          path: ping
          method: get
  graphql:
    description: GraphQL Interface
    handler: dist/src/graphql/index.handler
    events:
      - http:
          path: /graphql
          method: post
      - http:
          path: /graphql
          method: get
  auth_google:
    description: Google Auth 2.0 Login
    handler: dist/src/auth/index.auth_google
    events:
      - http:
          path: /auth/google/{any+}
          method: ANY
  auth_development:
    description: Development Dev Login
    handler: dist/src/auth/index.auth_development
    events:
      - http:
          path: /auth/development/{any+}
          method: get
  static:
    handler: dist/src/server/index.staticFile
    events:
      - http:
          path: /public/{proxy+}
          method: get
  application:
    description: React Isomorphic Application
    handler: dist/src/server/index.application
    warmup: true
    events:
      - http:
          path: /
          method: get
      - http:
          path: /{proxy+}
          method: get
